{"version":3,"sources":["file:///C:/Users/PC%20GM/Desktop/Jobs/IkamePA/ikame_pa_test/assets/Scripts/Others/vFx_FireLight.ts"],"names":["_decorator","Component","easing","ParticleSystem2D","tween","Vec2","GameInfo","ccclass","property","vFx_FireLight","start","PS_fireLight","node","getComponentInChildren","updateDirectionFireLightVfx","touchPos","x","smoothGravity","currentSideIsLeft","isLeft","number","to","gravity","smooth"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAmBC,MAAAA,gB,OAAAA,gB;AAAkBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;AACnEC,MAAAA,Q,iBAAAA,Q;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;+BAIjBS,a,WADZF,OAAO,CAAC,eAAD,C,yBAAR,MACaE,aADb,SACmCR,SADnC,CAC6C;AAAA;AAAA;;AAAA,gDAER,IAFQ;;AAAA,qDAIZ,IAJY;AAAA;;AAO/BS,QAAAA,KAAK,GAAS;AACpB,eAAKC,YAAL,GAAoB,KAAKC,IAAL,CAAUC,sBAAV,CAAiCV,gBAAjC,CAApB;AACH;;AAGMW,QAAAA,2BAA2B,CAACC,QAAD,EAAuB;AACrD,cAAGA,QAAQ,CAACC,CAAT,GAAa;AAAA;AAAA,oCAASD,QAAT,CAAkBC,CAAlC,EAAqC;AACjC,iBAAKC,aAAL,CAAmB,IAAnB;AACA,iBAAKC,iBAAL,GAAyB,IAAzB;AACH,WAHD,MAKK;AACD,iBAAKD,aAAL,CAAmB,KAAnB;AACA,iBAAKC,iBAAL,GAAyB,KAAzB;AACH;AACJ;;AAGOD,QAAAA,aAAa,CAACE,MAAD,EAAwB;AACzC,cAAGA,MAAM,KAAK,KAAKD,iBAAnB,EAAsC,OADG,CAGzC;;AAEA,cAAIE,MAAM,GAAGD,MAAM,GAAG,CAAC,GAAJ,GAAU,GAA7B;AAEAf,UAAAA,KAAK,CAAC,KAAKO,YAAN,CAAL,CACCU,EADD,CACI,GADJ,EACS;AAACC,YAAAA,OAAO,EAAE,IAAIjB,IAAJ,CAASe,MAAT,EAAiB,GAAjB;AAAV,WADT,EAC2C;AAAClB,YAAAA,MAAM,EAAEA,MAAM,CAACqB;AAAhB,WAD3C,EAECb,KAFD;AAGH;;AAnCwC,O","sourcesContent":["import { _decorator, Component, easing, log, Node, ParticleSystem2D, tween, Vec2, Vec3 } from 'cc';\r\nimport { GameInfo } from '../Const/GameInfo';\r\nconst { ccclass, property } = _decorator;\r\n\r\n \r\n@ccclass('vFx_FireLight')\r\nexport class vFx_FireLight extends Component {\r\n\r\n    PS_fireLight: ParticleSystem2D = null;\r\n\r\n    currentSideIsLeft: boolean = true;\r\n\r\n\r\n    protected start(): void {\r\n        this.PS_fireLight = this.node.getComponentInChildren(ParticleSystem2D);\r\n    }\r\n\r\n\r\n    public updateDirectionFireLightVfx(touchPos: Vec3): void {\r\n        if(touchPos.x > GameInfo.touchPos.x) {\r\n            this.smoothGravity(true);\r\n            this.currentSideIsLeft = true;\r\n        }\r\n\r\n        else {\r\n            this.smoothGravity(false);\r\n            this.currentSideIsLeft = false;\r\n        }\r\n    }\r\n\r\n\r\n    private smoothGravity(isLeft: boolean): void {\r\n        if(isLeft === this.currentSideIsLeft) return;\r\n\r\n        // log(\"switch Side vFx\")\r\n\r\n        let number = isLeft ? -500 : 500;\r\n\r\n        tween(this.PS_fireLight)\r\n        .to(0.2, {gravity: new Vec2(number, 200)}, {easing: easing.smooth})\r\n        .start();\r\n    }\r\n\r\n\r\n}\r\n\r\n"]}