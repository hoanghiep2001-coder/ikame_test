{"version":3,"sources":["file:///D:/PA_2024/3D/MergeRobo/MergeRobo_FullProject/assets/Scripts/GamePlay/vFx_FireLight.ts"],"names":["_decorator","Component","easing","log","ParticleSystem2D","tween","Vec2","GameInfo","ccclass","property","vFx_FireLight","start","PS_fireLight","node","getComponentInChildren","updateDirectionFireLightVfx","touchPos","x","smoothGravity","currentSideIsLeft","isLeft","number","to","gravity","smooth"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,G,OAAAA,G;AAAWC,MAAAA,gB,OAAAA,gB;AAAkBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;AACnEC,MAAAA,Q,iBAAAA,Q;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;+BAIjBU,a,WADZF,OAAO,CAAC,eAAD,C,yBAAR,MACaE,aADb,SACmCT,SADnC,CAC6C;AAAA;AAAA;;AAAA,gDAER,IAFQ;;AAAA,qDAIZ,IAJY;AAAA;;AAO/BU,QAAAA,KAAK,GAAS;AACpB,eAAKC,YAAL,GAAoB,KAAKC,IAAL,CAAUC,sBAAV,CAAiCV,gBAAjC,CAApB;AACH;;AAGMW,QAAAA,2BAA2B,CAACC,QAAD,EAAuB;AACrD,cAAGA,QAAQ,CAACC,CAAT,GAAa;AAAA;AAAA,oCAASD,QAAT,CAAkBC,CAAlC,EAAqC;AACjC,iBAAKC,aAAL,CAAmB,IAAnB;AACA,iBAAKC,iBAAL,GAAyB,IAAzB;AACH,WAHD,MAKK;AACD,iBAAKD,aAAL,CAAmB,KAAnB;AACA,iBAAKC,iBAAL,GAAyB,KAAzB;AACH;AACJ;;AAGOD,QAAAA,aAAa,CAACE,MAAD,EAAwB;AACzC,cAAGA,MAAM,KAAK,KAAKD,iBAAnB,EAAsC;AAEtChB,UAAAA,GAAG,CAAC,iBAAD,CAAH;AAEA,cAAIkB,MAAM,GAAGD,MAAM,GAAG,CAAC,GAAJ,GAAU,GAA7B;AAEAf,UAAAA,KAAK,CAAC,KAAKO,YAAN,CAAL,CACCU,EADD,CACI,GADJ,EACS;AAACC,YAAAA,OAAO,EAAE,IAAIjB,IAAJ,CAASe,MAAT,EAAiB,GAAjB;AAAV,WADT,EAC2C;AAACnB,YAAAA,MAAM,EAAEA,MAAM,CAACsB;AAAhB,WAD3C,EAECb,KAFD;AAGH;;AAnCwC,O","sourcesContent":["import { _decorator, Component, easing, log, Node, ParticleSystem2D, tween, Vec2, Vec3 } from 'cc';\nimport { GameInfo } from '../Const/GameInfo';\nconst { ccclass, property } = _decorator;\n\n \n@ccclass('vFx_FireLight')\nexport class vFx_FireLight extends Component {\n\n    PS_fireLight: ParticleSystem2D = null;\n\n    currentSideIsLeft: boolean = true;\n\n\n    protected start(): void {\n        this.PS_fireLight = this.node.getComponentInChildren(ParticleSystem2D);\n    }\n\n\n    public updateDirectionFireLightVfx(touchPos: Vec3): void {\n        if(touchPos.x > GameInfo.touchPos.x) {\n            this.smoothGravity(true);\n            this.currentSideIsLeft = true;\n        }\n\n        else {\n            this.smoothGravity(false);\n            this.currentSideIsLeft = false;\n        }\n    }\n\n\n    private smoothGravity(isLeft: boolean): void {\n        if(isLeft === this.currentSideIsLeft) return;\n\n        log(\"switch Side vFx\")\n\n        let number = isLeft ? -500 : 500;\n\n        tween(this.PS_fireLight)\n        .to(0.2, {gravity: new Vec2(number, 200)}, {easing: easing.smooth})\n        .start();\n    }\n\n\n}\n\n"]}