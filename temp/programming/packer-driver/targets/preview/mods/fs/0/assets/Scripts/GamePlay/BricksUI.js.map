{"version":3,"sources":["file:///D:/PA/IceBear_PA_2024/3D/HexaSort_FullProject/HexaSort_FullProject/assets/Scripts/GamePlay/BricksUI.ts"],"names":["_decorator","Camera","Component","instantiate","Label","log","Node","Prefab","Vec3","ccclass","property","BricksUI","start","birckNodes","node","children","filter","name","includes","BrickNodes","forEach","brick","index","brickSilver","getChildByName","brickWhite","brickBlack","canOpenNode","active","UnlockBrickPointNode","UnlockBrickPoint","parent","PointContainer","pointToUnlockNode","find","child","pointToUnlock","match","label","getComponentInChildren","string","String","setUnlockPointPos","worldPosition","schedule","brickWorldPos","out","wpos","convertToUINode","Canvas","position","x","y","z"],"mappings":"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","sourcesContent":["import { _decorator, Camera, Component, instantiate, Label, log, Node, Prefab, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n \n@ccclass('BricksUI')\nexport class BricksUI extends Component {\n\n    @property(Node)\n    Canvas: Node = null;\n\n    @property(Camera)\n    Camera: Camera = null;\n\n    @property(Node)\n    PointContainer: Node = null;\n\n    @property(Prefab)\n    UnlockBrickPoint: Prefab = null;\n\n    BrickNodes: Node[] = [];\n\n\n    protected start(): void {\n        let birckNodes = this.node.children.filter((node) => node.name.includes(\"Node_\"));\n        this.BrickNodes = birckNodes;\n\n        this.BrickNodes.forEach((brick, index) => {\n            let brickSilver = brick.getChildByName(\"Silver\");\n            let brickWhite = brick.getChildByName(\"White\");\n            let brickBlack = brick.getChildByName(\"Black\");\n            let canOpenNode = brick.getChildByName(\"CanOpen\");\n            brickWhite.active = false;\n\n            if(canOpenNode) {\n                brickSilver.active = true;\n                brickBlack.active = false;\n            }\n            else {\n                brickSilver.active = false;\n                \n                let UnlockBrickPointNode = instantiate(this.UnlockBrickPoint);\n                UnlockBrickPointNode.parent = this.PointContainer;\n                \n                let pointToUnlockNode = brick.children.find((child => child.name.includes(\"IsOpen\")));\n                let pointToUnlock = pointToUnlockNode.name.match(/\\d+/)[0];\n                let label = UnlockBrickPointNode.getComponentInChildren(Label);\n                \n                UnlockBrickPointNode.name = `pointToUnlock_${pointToUnlock}`;\n\n                log(pointToUnlock)\n\n                label.string = String(pointToUnlock);\n\n                this.setUnlockPointPos(brick.worldPosition, UnlockBrickPointNode);\n                this.schedule(() => {\n                    this.setUnlockPointPos(brick.worldPosition, UnlockBrickPointNode);\n                }, 0.1)\n            }\n        })\n    }\n\n\n    public setUnlockPointPos(brickWorldPos: Vec3, UnlockBrickPointNode: Node): void {\n        const out = new Vec3();\n        const wpos = brickWorldPos;\n        this.Camera.convertToUINode(wpos, this.Canvas, out);\n        UnlockBrickPointNode.position = new Vec3(out.x, out.y, out.z);\n    }\n\n\n\n\n}\n\n"]}